# üêá Python RabbitMQ Example

## üóÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫

```
python-rabbitmq-example/
‚îú‚îÄ‚îÄ **handlers/**              # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ–¥–ø–∏—Å—á–∏–∫–∏ + –∏–∑–¥–∞—Ç–µ–ª–∏)
‚îÇ   ‚îú‚îÄ‚îÄ `handle_{api_name}.py`
‚îÇ   ‚îî‚îÄ‚îÄ `handle_publish_video.py`
‚îú‚îÄ‚îÄ **processors/**            # –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
‚îÇ   ‚îî‚îÄ‚îÄ `process_{api_name}.py`
‚îú‚îÄ‚îÄ **models/**                # Pydantic –º–æ–¥–µ–ª–∏ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤/–æ—Ç–≤–µ—Ç–æ–≤
‚îÇ   ‚îî‚îÄ‚îÄ `{api_name}_models.py`
‚îú‚îÄ‚îÄ **rabbit/**                # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è RabbitMQ (–æ—á–µ—Ä–µ–¥–∏, –æ–±–º–µ–Ω—ã, –±—Ä–æ–∫–µ—Ä)
‚îÇ   ‚îú‚îÄ‚îÄ `broker.py`
‚îÇ   ‚îú‚îÄ‚îÄ `exchanges.py`
‚îÇ   ‚îî‚îÄ‚îÄ `queues.py`
‚îú‚îÄ‚îÄ **tests/**                 # –Æ–Ω–∏—Ç-—Ç–µ—Å—Ç—ã
‚îÇ   ‚îú‚îÄ‚îÄ `handle_{api_name}_test.py`
‚îÇ   ‚îî‚îÄ‚îÄ `process_{api_name}_test.py`
‚îî‚îÄ‚îÄ `main.py`                  # –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
```

---

## üîÅ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç

–ü—Ä–∏–º–µ—Ä –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –¥–≤—É—Ö –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤:

1. **video_publisher_service**

- `handle_publish_video.py` –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –µ–≥–æ —á–µ—Ä–µ–∑ `process_publish_video()`
- –ü—É–±–ª–∏–∫—É–µ—Ç –æ—Ç–≤–µ—Ç –≤ –æ—á–µ—Ä–µ–¥—å

2. **video_processor_service**

- `handle_chunk_video.py` —Å–ª—É—à–∞–µ—Ç –æ—Ç–≤–µ—Ç
- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –µ–≥–æ —á–µ—Ä–µ–∑ `process_chunk_video()`
- –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≤–æ–π –æ—Ç–≤–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ

**–ü–∞–π–ø–ª–∞–π–Ω:**

```
video_publisher_service.publish_video_request_queue -> 
video_publisher_service.publish_video_response_queue -> 
video_processor_service.chunk_video_response_queue
```

---

## üí° –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–∏–∑–∞–π–Ω–∞

- **Handlers** —Å–≤—è–∑—ã–≤–∞—é—Ç –æ—á–µ—Ä–µ–¥–∏ –∏ –æ–±–º–µ–Ω—ã.
- –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ RabbitMQ –≤ –ø–∞–ø–∫–µ **rabbit/**.
- –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –æ—Ç–¥–µ–ª–µ–Ω–∞ –≤ **processors/**.
- –î–ª—è –∫–∞–∂–¥–æ–≥–æ handler –∏ processor –µ—Å—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã.

---

## ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞

–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ RabbitMQ –∑–∞–ø—É—â–µ–Ω:

```bash
docker-compose up
# –∏–ª–∏ (–¥–ª—è –≤–µ—Ä—Å–∏–∏ 2)
docker compose up
```

–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:

```bash
docker-compose logs -f example-app
# –∏–ª–∏ (–¥–ª—è –≤–µ—Ä—Å–∏–∏ 2)
docker compose logs -f example-app
```

–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ UI RabbitMQ:

- –û—Ç–∫—Ä–æ–π—Ç–µ: `http://localhost:15672/#/queues/%2F/publish_video_request_queue`
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª "Publish message"
- –ü—Ä–∏–º–µ—Ä –ø–æ–ª–µ–∑–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ (payload):

```json
{}
```

–∏–ª–∏

```json
{"request_id": "123-321"}
```

---

## ‚úÖ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤

```bash
pytest
# –∏–ª–∏ (–µ—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞)
PYTHONPATH=. pytest
```